name: Release Workflow

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag for the release (#.#.#)'
        required: true

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up MSVC
        uses: microsoft/setup-msbuild@v1.3.1

      - name: Set up CMake
        run: |
          choco install cmake
        shell: pwsh

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -G "Visual Studio 17" -A Win32

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Artifact Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target package_dlls

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          path: ${{github.workspace}}/build/artifacts/
          name: artifacts-${{ github.event.inputs.tag }}

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: artifacts-${{ github.event.inputs.tag }}
          path: build

      - name: Zip directory
        run: |
          cd build
          zip -r artifacts-${{ github.event.inputs.tag }}.zip ./

      - name: Set up Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.tag }}
          release_name: Release v${{ github.event.inputs.tag }}
          draft: false
          prerelease: false
          body: |
            Release notes for version v${{ github.event.inputs.tag }}

      - name: Upload Release Artifact
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/artifacts-${{ github.event.inputs.tag }}.zip
          asset_name: artifacts-${{ github.event.inputs.tag }}.zip
          asset_content_type: application/zip  # Adjust the content type based on your artifacts